class Artwork:
    def __init__(self, title, artist, date_of_creation, historical_significance, exhibition_location):
        self.title = title
        self.artist = artist
        self.date_of_creation = date_of_creation
        self.historical_significance = historical_significance
        self.exhibition_location = exhibition_location



from artwork import Artwork

class Exhibition(Artwork):
    def __init__(self, title, artist, date_of_creation, historical_significance, exhibition_location, duration, location):
        super().__init__(title, artist, date_of_creation, historical_significance, exhibition_location)
        self.duration = duration
        self.location = location



class Visitor:
    def __init__(self, name, age):
        self.name = name
        self.age = age
        self.ticket_purchased = False
        self.ticket_type = None
        self.ticket_price = 0.0



class Ticket:
    def __init__(self, event_name, event_location, event_date, ticket_price):
        self.event_name = event_name
        self.event_location = event_location
        self.event_date = event_date
        self.ticket_price = ticket_price



from artwork import Artwork
from exhibition import Exhibition
from visitor import Visitor
from ticket import Ticket

# Test case: Addition of new art to the museum
artwork = Artwork("Mona Lisa", "Leonardo da Vinci", "1503â€“1506", "Renaissance masterpiece", "Permanent galleries")

# Test case: Opening of a new exhibition at the museum
exhibition = Exhibition("The Great Masters", "Various artists", "Various", "Collection of renowned artworks", "Exhibition hall", "1 month", "Hall A")

# Test case: Purchase of tickets by an individual
visitor = Visitor("John Doe", 30)
visitor.ticket_purchased = True
visitor.ticket_type = "Adult"
visitor.ticket_price = 63.0

# Test case: Display payment receipt
ticket = Ticket("The Great Masters", "Hall A", "2024-04-15", 63.0)
print(f"Receipt for {ticket.event_name} at {ticket.event_location} on {ticket.event_date}: ${ticket.ticket_price}")
